<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
                         http://www.springframework.org/schema/context    
                         http://www.springframework.org/schema/context/spring-context-4.0.xsd
                         http://www.springframework.org/schema/mvc    
                         http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.htkapp.**.web"/>

    <mvc:default-servlet-handler/>

    <!-- 自动扫描 标签 -->
    <bean name="springContextUtil" class="com.htkapp.core.shiro.common.utils.SpringContextUtil"/>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 解决responseBody返回中文乱码 -->
    <bean class="com.htkapp.core.UTF8StringBeanPostProcessor"/>

    <!-- 配置Fastjson支持 -->
    <bean
            class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json</value>
            </list>
        </property>
        <property name="features">
            <list>
                <value>WriteMapNullValue</value>
                <value>QuoteFieldNames</value>
            </list>
        </property>
    </bean>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>

    <!-- 视图解析器 -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>


    <mvc:annotation-driven validator="validator"/>

    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 这里配置将使用上面国际化配置的messageSource -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean id="loginInterceptor" class="com.htkapp.core.interceptor.LoginInterceptor">
                <property name="excludeUrls">
                    <list>
                        <!-- 登陆加注册 -->
                        <value>/htkApp/merchant/login</value>
                        <value>/htkApp/admin/login</value>
                        <value>/htkApp/merchant/register.htm</value>
                        <value>/htkApp/merchant/verifyMerchant</value>
                        <value>/htkApp/common/getPhoneVerificationCode</value>
                        <value>/htkApp/merchant/register</value>
                        <value>/htkApp/merchant/regSuccess</value>
                        <value>/htkApp/merchant/forgetPassword.htm</value>
                        <value>/htkApp/merchant/verifyMobileAndPhone</value>
                        <value>/htkApp/merchant/changePassword</value>
                        <value>/htkApp/login/captcha</value>
                        <value>/htkApp/resource/</value>

                        <!--<value>/htkApp/merchant/shopInfo/getShopCategoryList</value> -->


                        <!--调试放开的口 -->
                        <value>/htkApp/API/shopDataAPI/</value>
                        <value>/htkApp/API/appAPI/</value>
                        <value>/htkApp/API/accountShopMessageAPI/</value>
                        <value>/htkApp/API/paymentInterfaceAPI/refundByOrderNumber</value>
                        <value>/htkApp/API/paymentInterfaceAPI/weChatPayNotifyInterface
                        </value>
                        <value>/htkApp/API/paymentInterfaceAPI/aliPayNotifyInterface
                        </value>
                        <value>/htkApp/upload/</value>

                        <!--app用户放开的公共接口 -->
                        <value>/htkApp/API/AccountMessage/registerByPhone</value>
                        <value>/htkApp/API/AccountMessage/sendSms/</value>
                        <value>/htkApp/API/AccountMessage/appAccountLoginByCode</value>
                        <value>/htkApp/API/AccountMessage/appAccountLoginByUserName</value>
                        <value>/htkApp/API/AccountMessage/forgetPasswordBySMS</value>
                        <value>/htkApp/API/AccountMessage/loginByWeChat</value>
                        <value>/htkApp/API/AccountMessage/loginByQq</value>
                        <value>/htkApp/API/AccountMessage/weChatLoginCallUpInterface</value>
                        <value>/htkApp/API/AccountMessage/qqLoginCallUpInterface</value>
                        <value>/htkApp/API/AccountMessage/appAccountLoginByCode</value>
                        <value>/htkApp/API/buffetFoodAPI/</value>
                        <value>/htkApp/API/appMemberAPI/</value>
                        <!-- 商户app放开的公共接口 -->
                        <value>/htkApp/API/accountShopMessageAPI/appAccountShopLoginByUserName
                        </value>
                        <value>/htkApp/API/accountShopMessageAPI/forgetPasswordBySMS
                        </value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--生成验证码 -->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">yes</prop>
                        <prop key="kaptcha.border.color">105,179,90</prop>
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <prop key="kaptcha.image.width">120</prop>
                        <prop key="kaptcha.image.height">50</prop>
                        <prop key="kaptcha.textproducer.font.size">45</prop>
                        <prop key="kaptcha.session.key">code</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

</beans>