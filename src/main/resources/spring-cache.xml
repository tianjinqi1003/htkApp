<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
	   default-lazy-init="false">
		
	 <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="100"/><!-- 最大闲置 -->
        <property name="minIdle" value="10"/><!-- 最小闲置 -->
        <property name="testOnBorrow" value="true"/><!-- 可以获取 -->
    </bean>

	<!-- redis 配置,也可以把配置挪到properties配置文件中,再读取 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<!-- 端口，默认6379 -->
	    <constructor-arg index="2" value="6379"  name="port" type="int"/>
	    <constructor-arg index="3" value="5000"  name="timeout" type="int"/>
	    <constructor-arg index="1" value="120.27.5.36" name="host" type="java.lang.String"/>
	</bean>

	<!--<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">-->
		<!--<property name="usePool" value="true" />-->
		<!--<property name="hostName" value="120.27.5.36" />-->
		<!--<property name="port" value="6379" />-->
		<!--<property name="password" value="" />-->
		<!--<property name="timeout" value="2000" />-->
		<!--<property name="database" value="0" />-->
		<!--<constructor-arg index="0" ref="jedisPoolConfig" />-->
	<!--</bean>-->

	<!--<bean id="redisCache" class="org.springframework.data.redis.core.RedisTemplate">-->
		<!--<property name="connectionFactory" ref="redisConnectionFactory" />-->
		<!--<property name="keySerializer" ref="stringRedisSerializer" />-->
		<!--<property name="valueSerializer" ref="stringRedisSerializer" />-->
		<!--<property name="hashKeySerializer" ref="stringRedisSerializer" />-->
		<!--<property name="hashValueSerializer" ref="stringRedisSerializer" />-->
	<!--</bean>-->

	<!--<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
</beans>